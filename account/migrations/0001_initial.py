# Generated by Django 5.1 on 2024-09-18 08:59

import account.manager
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('user_type', models.CharField(choices=[('student', 'student'), ('institute', 'institute'), ('freelance', 'freelance'), ('admin', 'admin'), ('unknown', 'unknown')], default='unknown', max_length=10)),
                ('national_code', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '09999999999'.\nUp to 11 digits allowed.", regex='^09\\d{9}')])),
                ('email', models.EmailField(blank=True, max_length=70, null=True, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', account.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FreelanceProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('institute_name', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('provinces', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='institute_logo')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='institute_cover')),
                ('slogan', models.CharField(blank=True, max_length=500, null=True)),
                ('economic_code', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=6000, null=True)),
                ('ZP_MERCHANT_ID', models.CharField(blank=True, default='00000000-0000-0000-0000-000000000000', max_length=256, null=True)),
                ('primary_color', models.CharField(blank=True, max_length=100, null=True)),
                ('secondary_color', models.CharField(blank=True, max_length=100, null=True)),
                ('memory_mirror_price', models.IntegerField(blank=True, null=True)),
                ('audio_scripter_price', models.IntegerField(blank=True, null=True)),
                ('wallet', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InstituteProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('institute_name', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('provinces', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='institute_logo')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='institute_cover')),
                ('slogan', models.CharField(blank=True, max_length=500, null=True)),
                ('economic_code', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=6000, null=True)),
                ('ZP_MERCHANT_ID', models.CharField(blank=True, default='00000000-0000-0000-0000-000000000000', max_length=256, null=True)),
                ('primary_color', models.CharField(blank=True, max_length=100, null=True)),
                ('secondary_color', models.CharField(blank=True, max_length=100, null=True)),
                ('memory_mirror_price', models.IntegerField(blank=True, null=True)),
                ('audio_scripter_price', models.IntegerField(blank=True, null=True)),
                ('wallet', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_IELTS_student', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Rather-not-say', 'Rather-not-say')], default='Male', max_length=20)),
                ('english_level', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('C1', 'C1'), ('C2', 'C2')], default='A1', max_length=10)),
                ('description', models.TextField(blank=True, max_length=4000, null=True)),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.instituteprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
